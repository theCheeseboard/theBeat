name: "Windows CI"
on:
  push:
    branches: [blueprint]
  release:
    types: [published]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install ninja
        run: |
          choco install ninja
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: 6.4.1
          arch: win64_msvc2019_64
          modules: addons.qtmultimedia addons.qtwebsockets qt5compat
      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1.12.0
        with:
          sdk: 10.0.22000.0
      - uses: vicr123/libcontemporary/install-libcontemporary@actions
      - uses: vicr123/libcontemporary/build-project@actions
        name: "Build contemporary-theme"
        with:
          project: "vicr123/contemporary-theme"
          commitish: "blueprint"
      - uses: vicr123/libcontemporary/build-project@actions
        name: "Build taglib"
        with:
          project: "taglib/taglib"
          commitish: "v1.12"
          extra-cmake-args: -DBUILD_SHARED_LIBS=ON
      - uses: actions/checkout@v1
        with:
          submodules: 'recursive'
      - uses: vicr123/libcontemporary/build-project@actions
        name: "Build project"
        with:
          project: "."
      - name: "Prepare for deployment"
        shell: bash
        run: |
          mkdir -p ./build/application/deploy
          mkdir -p ./build/application/deploy/plugins
          cp ./build/plugins/*/*.dll ./build/application/deploy/plugins
          cp ./build/cdlib/src/CDLib-build/CDLib.dll ./build/application/deploy
      - uses: vicr123/libcontemporary/deploy-project@actions
        id: deploy
        name: "Deploy project"
        with:
          subdir: "application"
      - uses: actions/upload-artifact@v1
        name: Upload Artifact to GitHub Actions
        with:
          name: "thebeat-win"
          path: ${{ steps.deploy.outputs.package }}
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    steps:
      - uses: actions/download-artifact@v3
        name: "Download Artifact"
        id: download
        with:
          name: "thebeat-win"
          path: "thebeat-win"
      - run: |
          zip -r thebeat-win.zip thebeat-win
      - name: "Upload to Release"
        uses: softprops/action-gh-release@v1
        with:
          files: thebeat-win.zip
